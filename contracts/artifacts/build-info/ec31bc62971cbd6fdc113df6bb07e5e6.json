{
	"id": "ec31bc62971cbd6fdc113df6bb07e5e6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"DPay-proof-of-concept/contracts/GetBalance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract GetBalance {\n\n    address internal constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    address internal constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n    address internal constant WBTC = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;\n\n    function getBalance() external view returns(uint256, uint256, uint256) {\n        return(\n            IERC20(DAI).balanceOf(msg.sender), \n            IERC20(WETH9).balanceOf(msg.sender), \n            IERC20(WBTC).balanceOf(msg.sender)\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DPay-proof-of-concept/contracts/GetBalance.sol": {
				"GetBalance": {
					"abi": [
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":115:638  contract GetBalance {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":115:638  contract GetBalance {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":386:636  function getBalance() external view returns(uint256, uint256, uint256) {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":430:437  uint256 */\n      0x00\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":439:446  uint256 */\n      dup1\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":448:455  uint256 */\n      0x00\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":174:216  0x6B175474E89094C44Da98b954EedeAC495271d0F */\n      0x6b175474e89094c44da98b954eedeac495271d0f\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":487:508  IERC20(DAI).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":509:519  msg.sender */\n      caller\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":487:520  IERC20(DAI).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":256:298  0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 */\n      0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":535:558  IERC20(WETH9).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":559:569  msg.sender */\n      caller\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":535:570  IERC20(WETH9).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_18:\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":337:379  0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599 */\n      0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":585:607  IERC20(WBTC).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":608:618  msg.sender */\n      caller\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":585:619  IERC20(WBTC).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_19:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_22:\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":467:629  return(... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"DPay-proof-of-concept/contracts/GetBalance.sol\":386:636  function getBalance() external view returns(uint256, uint256, uint256) {... */\n      swap1\n      swap2\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_23:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_24:\n        /* \"#utility.yul\":177:201   */\n      tag_36\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_23\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:656   */\n    tag_7:\n        /* \"#utility.yul\":363:367   */\n      0x00\n        /* \"#utility.yul\":401:403   */\n      0x60\n        /* \"#utility.yul\":390:399   */\n      dup3\n        /* \"#utility.yul\":386:404   */\n      add\n        /* \"#utility.yul\":378:404   */\n      swap1\n      pop\n        /* \"#utility.yul\":414:485   */\n      tag_38\n        /* \"#utility.yul\":482:483   */\n      0x00\n        /* \"#utility.yul\":471:480   */\n      dup4\n        /* \"#utility.yul\":467:484   */\n      add\n        /* \"#utility.yul\":458:464   */\n      dup7\n        /* \"#utility.yul\":414:485   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":495:567   */\n      tag_39\n        /* \"#utility.yul\":563:565   */\n      0x20\n        /* \"#utility.yul\":552:561   */\n      dup4\n        /* \"#utility.yul\":548:566   */\n      add\n        /* \"#utility.yul\":539:545   */\n      dup6\n        /* \"#utility.yul\":495:567   */\n      tag_24\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":577:649   */\n      tag_40\n        /* \"#utility.yul\":645:647   */\n      0x40\n        /* \"#utility.yul\":634:643   */\n      dup4\n        /* \"#utility.yul\":630:648   */\n      add\n        /* \"#utility.yul\":621:627   */\n      dup5\n        /* \"#utility.yul\":577:649   */\n      tag_24\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":214:656   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":662:788   */\n    tag_25:\n        /* \"#utility.yul\":699:706   */\n      0x00\n        /* \"#utility.yul\":739:781   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":732:737   */\n      dup3\n        /* \"#utility.yul\":728:782   */\n      and\n        /* \"#utility.yul\":717:782   */\n      swap1\n      pop\n        /* \"#utility.yul\":662:788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:890   */\n    tag_26:\n        /* \"#utility.yul\":831:838   */\n      0x00\n        /* \"#utility.yul\":860:884   */\n      tag_43\n        /* \"#utility.yul\":878:883   */\n      dup3\n        /* \"#utility.yul\":860:884   */\n      tag_25\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":849:884   */\n      swap1\n      pop\n        /* \"#utility.yul\":794:890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":896:1014   */\n    tag_27:\n        /* \"#utility.yul\":983:1007   */\n      tag_45\n        /* \"#utility.yul\":1001:1006   */\n      dup2\n        /* \"#utility.yul\":983:1007   */\n      tag_26\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":978:981   */\n      dup3\n        /* \"#utility.yul\":971:1008   */\n      mstore\n        /* \"#utility.yul\":896:1014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1242   */\n    tag_10:\n        /* \"#utility.yul\":1113:1117   */\n      0x00\n        /* \"#utility.yul\":1151:1153   */\n      0x20\n        /* \"#utility.yul\":1140:1149   */\n      dup3\n        /* \"#utility.yul\":1136:1154   */\n      add\n        /* \"#utility.yul\":1128:1154   */\n      swap1\n      pop\n        /* \"#utility.yul\":1164:1235   */\n      tag_47\n        /* \"#utility.yul\":1232:1233   */\n      0x00\n        /* \"#utility.yul\":1221:1230   */\n      dup4\n        /* \"#utility.yul\":1217:1234   */\n      add\n        /* \"#utility.yul\":1208:1214   */\n      dup5\n        /* \"#utility.yul\":1164:1235   */\n      tag_27\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1020:1242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1329:1446   */\n    tag_29:\n        /* \"#utility.yul\":1438:1439   */\n      0x00\n        /* \"#utility.yul\":1435:1436   */\n      dup1\n        /* \"#utility.yul\":1428:1440   */\n      revert\n        /* \"#utility.yul\":1575:1697   */\n    tag_31:\n        /* \"#utility.yul\":1648:1672   */\n      tag_52\n        /* \"#utility.yul\":1666:1671   */\n      dup2\n        /* \"#utility.yul\":1648:1672   */\n      tag_23\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1641:1646   */\n      dup2\n        /* \"#utility.yul\":1638:1673   */\n      eq\n        /* \"#utility.yul\":1628:1691   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1687:1688   */\n      0x00\n        /* \"#utility.yul\":1684:1685   */\n      dup1\n        /* \"#utility.yul\":1677:1689   */\n      revert\n        /* \"#utility.yul\":1628:1691   */\n    tag_53:\n        /* \"#utility.yul\":1575:1697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1846   */\n    tag_32:\n        /* \"#utility.yul\":1760:1765   */\n      0x00\n        /* \"#utility.yul\":1791:1797   */\n      dup2\n        /* \"#utility.yul\":1785:1798   */\n      mload\n        /* \"#utility.yul\":1776:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1807:1840   */\n      tag_55\n        /* \"#utility.yul\":1834:1839   */\n      dup2\n        /* \"#utility.yul\":1807:1840   */\n      tag_31\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1703:1846   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1852:2203   */\n    tag_14:\n        /* \"#utility.yul\":1922:1928   */\n      0x00\n        /* \"#utility.yul\":1971:1973   */\n      0x20\n        /* \"#utility.yul\":1959:1968   */\n      dup3\n        /* \"#utility.yul\":1950:1957   */\n      dup5\n        /* \"#utility.yul\":1946:1969   */\n      sub\n        /* \"#utility.yul\":1942:1974   */\n      slt\n        /* \"#utility.yul\":1939:2058   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1977:2056   */\n      tag_58\n      tag_29\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1939:2058   */\n    tag_57:\n        /* \"#utility.yul\":2097:2098   */\n      0x00\n        /* \"#utility.yul\":2122:2186   */\n      tag_59\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2122:2186   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2112:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2068:2196   */\n      pop\n        /* \"#utility.yul\":1852:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e24815f17c2668566938dc027556bba3af2ee3e9f10b94e92dd81e9525a8913864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061034a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806312065fe014610030575b600080fd5b610038610050565b60405161004793929190610223565b60405180910390f35b6000806000736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016100a2919061029b565b602060405180830381865afa1580156100bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e391906102e7565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610130919061029b565b602060405180830381865afa15801561014d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017191906102e7565b732260fac5e5542a773aa44fbcfedf7c193bc2c59973ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101be919061029b565b602060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff91906102e7565b925092509250909192565b6000819050919050565b61021d8161020a565b82525050565b60006060820190506102386000830186610214565b6102456020830185610214565b6102526040830184610214565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102858261025a565b9050919050565b6102958161027a565b82525050565b60006020820190506102b0600083018461028c565b92915050565b600080fd5b6102c48161020a565b81146102cf57600080fd5b50565b6000815190506102e1816102bb565b92915050565b6000602082840312156102fd576102fc6102b6565b5b600061030b848285016102d2565b9150509291505056fea2646970667358221220e24815f17c2668566938dc027556bba3af2ee3e9f10b94e92dd81e9525a8913864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D DUP2 PUSH2 0x20A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x238 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x245 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x252 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x214 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP3 PUSH2 0x25A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x295 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C4 DUP2 PUSH2 0x20A JUMP JUMPDEST DUP2 EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E1 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2FC PUSH2 0x2B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP5 DUP3 DUP6 ADD PUSH2 0x2D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 BASEFEE ISZERO CALL PUSH29 0x2668566938DC027556BBA3AF2EE3E9F10B94E92DD81E9525A891386473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "115:523:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalance_122": {
									"entryPoint": 80,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2206:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:2",
														"type": ""
													}
												],
												"src": "7:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:2",
														"type": ""
													}
												],
												"src": "90:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "368:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "378:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "390:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "378:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "458:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "471:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "482:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "467:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "467:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "414:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "539:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "552:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "563:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "548:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "495:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "621:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "634:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "645:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "577:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "577:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "324:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "336:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "344:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "352:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "363:4:2",
														"type": ""
													}
												],
												"src": "214:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "707:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "717:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "732:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "717:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "699:7:2",
														"type": ""
													}
												],
												"src": "662:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "839:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "849:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "878:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "860:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "860:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "849:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "821:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "831:7:2",
														"type": ""
													}
												],
												"src": "794:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "961:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "978:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1001:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "983:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "971:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "971:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "949:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "956:3:2",
														"type": ""
													}
												],
												"src": "896:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1118:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1128:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1140:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1136:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1128:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1208:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1221:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1232:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1164:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1164:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1090:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1102:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1113:4:2",
														"type": ""
													}
												],
												"src": "1020:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1288:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1298:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1314:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1281:6:2",
														"type": ""
													}
												],
												"src": "1248:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1418:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1438:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1428:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1329:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1541:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1558:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1561:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1551:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1551:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1551:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1452:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1618:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1675:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1684:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1687:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1677:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1677:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1677:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1641:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1666:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1648:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1648:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1638:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1638:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1631:43:2"
															},
															"nodeType": "YulIf",
															"src": "1628:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1611:5:2",
														"type": ""
													}
												],
												"src": "1575:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1766:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1776:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1791:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1785:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1785:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1776:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1834:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1807:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1807:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1807:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1744:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1752:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1760:5:2",
														"type": ""
													}
												],
												"src": "1703:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1975:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:32:2"
															},
															"nodeType": "YulIf",
															"src": "1939:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "2068:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2112:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1899:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1910:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1922:6:2",
														"type": ""
													}
												],
												"src": "1852:351:2"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806312065fe014610030575b600080fd5b610038610050565b60405161004793929190610223565b60405180910390f35b6000806000736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016100a2919061029b565b602060405180830381865afa1580156100bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e391906102e7565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610130919061029b565b602060405180830381865afa15801561014d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017191906102e7565b732260fac5e5542a773aa44fbcfedf7c193bc2c59973ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016101be919061029b565b602060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ff91906102e7565b925092509250909192565b6000819050919050565b61021d8161020a565b82525050565b60006060820190506102386000830186610214565b6102456020830185610214565b6102526040830184610214565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102858261025a565b9050919050565b6102958161027a565b82525050565b60006020820190506102b0600083018461028c565b92915050565b600080fd5b6102c48161020a565b81146102cf57600080fd5b50565b6000815190506102e1816102bb565b92915050565b6000602082840312156102fd576102fc6102b6565b5b600061030b848285016102d2565b9150509291505056fea2646970667358221220e24815f17c2668566938dc027556bba3af2ee3e9f10b94e92dd81e9525a8913864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH20 0xC02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST PUSH20 0x2260FAC5E5542A773AA44FBCFEDF7C193BC2C599 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2E7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21D DUP2 PUSH2 0x20A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x238 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x245 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x214 JUMP JUMPDEST PUSH2 0x252 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x214 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x285 DUP3 PUSH2 0x25A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x295 DUP2 PUSH2 0x27A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C4 DUP2 PUSH2 0x20A JUMP JUMPDEST DUP2 EQ PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E1 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FD JUMPI PUSH2 0x2FC PUSH2 0x2B6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x30B DUP5 DUP3 DUP6 ADD PUSH2 0x2D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 BASEFEE ISZERO CALL PUSH29 0x2668566938DC027556BBA3AF2EE3E9F10B94E92DD81E9525A891386473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "115:523:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;386:250;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;430:7;439;448;174:42;487:21;;;509:10;487:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;256:42;535:23;;;559:10;535:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;337:42;585:22;;;608:10;585:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;467:162;;;;;;386:250;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:442::-;363:4;401:2;390:9;386:18;378:26;;414:71;482:1;471:9;467:17;458:6;414:71;:::i;:::-;495:72;563:2;552:9;548:18;539:6;495:72;:::i;:::-;577;645:2;634:9;630:18;621:6;577:72;:::i;:::-;214:442;;;;;;:::o;662:126::-;699:7;739:42;732:5;728:54;717:65;;662:126;;;:::o;794:96::-;831:7;860:24;878:5;860:24;:::i;:::-;849:35;;794:96;;;:::o;896:118::-;983:24;1001:5;983:24;:::i;:::-;978:3;971:37;896:118;;:::o;1020:222::-;1113:4;1151:2;1140:9;1136:18;1128:26;;1164:71;1232:1;1221:9;1217:17;1208:6;1164:71;:::i;:::-;1020:222;;;;:::o;1329:117::-;1438:1;1435;1428:12;1575:122;1648:24;1666:5;1648:24;:::i;:::-;1641:5;1638:35;1628:63;;1687:1;1684;1677:12;1628:63;1575:122;:::o;1703:143::-;1760:5;1791:6;1785:13;1776:22;;1807:33;1834:5;1807:33;:::i;:::-;1703:143;;;;:::o;1852:351::-;1922:6;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;1852:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "168400",
								"executionCost": "214",
								"totalCost": "168614"
							},
							"external": {
								"getBalance()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 115,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 638,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e24815f17c2668566938dc027556bba3af2ee3e9f10b94e92dd81e9525a8913864736f6c63430008120033",
									".code": [
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "12065FE0"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 115,
											"end": 638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 430,
											"end": 437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 448,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 216,
											"name": "PUSH",
											"source": 1,
											"value": "6B175474E89094C44DA98B954EEDEAC495271D0F"
										},
										{
											"begin": 487,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 487,
											"end": 508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 508,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 509,
											"end": 519,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 487,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 487,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 520,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 487,
											"end": 520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 256,
											"end": 298,
											"name": "PUSH",
											"source": 1,
											"value": "C02AAA39B223FE8D0A0E5C4F27EAD9083C756CC2"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 535,
											"end": 558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 535,
											"end": 558,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 559,
											"end": 569,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 535,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 535,
											"end": 570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 570,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 535,
											"end": 570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 337,
											"end": 379,
											"name": "PUSH",
											"source": 1,
											"value": "2260FAC5E5542A773AA44FBCFEDF7C193BC2C599"
										},
										{
											"begin": 585,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 585,
											"end": 607,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 585,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 608,
											"end": 618,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 585,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 585,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 585,
											"end": 619,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 585,
											"end": 619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 629,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 467,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 386,
											"end": 636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 214,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 363,
											"end": 367,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 390,
											"end": 399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 386,
											"end": 404,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 378,
											"end": 404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 378,
											"end": 404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 414,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 467,
											"end": 484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 458,
											"end": 464,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 414,
											"end": 485,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 414,
											"end": 485,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 414,
											"end": 485,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 495,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 563,
											"end": 565,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 552,
											"end": 561,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 548,
											"end": 566,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 539,
											"end": 545,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 495,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 495,
											"end": 567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 495,
											"end": 567,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 495,
											"end": 567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 577,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 647,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 634,
											"end": 643,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 630,
											"end": 648,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 577,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 577,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 577,
											"end": 649,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 214,
											"end": 656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 788,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 662,
											"end": 788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 699,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 732,
											"end": 737,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 728,
											"end": 782,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 717,
											"end": 782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 717,
											"end": 782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 662,
											"end": 788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 662,
											"end": 788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 890,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 794,
											"end": 890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 860,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 860,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 860,
											"end": 884,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 860,
											"end": 884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 849,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 849,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 794,
											"end": 890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 794,
											"end": 890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1014,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 896,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1001,
											"end": 1006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 983,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1007,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 983,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 978,
											"end": 981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 971,
											"end": 1008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 896,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1242,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1020,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1113,
											"end": 1117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1153,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1217,
											"end": 1234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1164,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1235,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1164,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1242,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1242,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1242,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1020,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1329,
											"end": 1446,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1329,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1438,
											"end": 1439,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1428,
											"end": 1440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1697,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1575,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1666,
											"end": 1671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1648,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1641,
											"end": 1646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1673,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1628,
											"end": 1691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1677,
											"end": 1689,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1628,
											"end": 1691,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1628,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1575,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1846,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1703,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1776,
											"end": 1798,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1834,
											"end": 1839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1807,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1807,
											"end": 1840,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1807,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1846,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1846,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1852,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1922,
											"end": 1928,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1950,
											"end": 1957,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1946,
											"end": 1969,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1974,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2058,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1939,
											"end": 2058,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1977,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1977,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1977,
											"end": 2056,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1977,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2058,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1939,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2122,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2186,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2122,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2186,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2186,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2068,
											"end": 2196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 2203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 2203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 2203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 2203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1852,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"DPay-proof-of-concept/contracts/GetBalance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DPay-proof-of-concept/contracts/GetBalance.sol\":\"GetBalance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"DPay-proof-of-concept/contracts/GetBalance.sol\":{\"keccak256\":\"0x42cbb153124817222bb2fe3e9cbe8fb50f195db1ead4207a0f0f748405ea0ae3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25fdacaebc0e70b39bfeae324ae9e36b69cae3abf816222f614ad254c69f15ce\",\"dweb:/ipfs/QmSn7Hkjn3YCQ4iEvxR9zTcyr8ToZBnvKz16too68iUqLq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"DPay-proof-of-concept/contracts/GetBalance.sol": {
				"ast": {
					"absolutePath": "DPay-proof-of-concept/contracts/GetBalance.sol",
					"exportedSymbols": {
						"GetBalance": [
							123
						],
						"IERC20": [
							77
						]
					},
					"id": 124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 124,
							"sourceUnit": 78,
							"src": "57:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GetBalance",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 123,
							"linearizedBaseContracts": [
								123
							],
							"name": "GetBalance",
							"nameLocation": "124:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 83,
									"mutability": "constant",
									"name": "DAI",
									"nameLocation": "168:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "142:74:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "142:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "174:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 86,
									"mutability": "constant",
									"name": "WETH9",
									"nameLocation": "248:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "222:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "222:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307843303261614133396232323346453844304130653543344632376541443930383343373536436332",
										"id": 85,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "256:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 89,
									"mutability": "constant",
									"name": "WBTC",
									"nameLocation": "330:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 123,
									"src": "304:75:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 87,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "304:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832323630464143354535353432613737334161343466424366654466374331393362633243353939",
										"id": 88,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "337:42:1",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "457:179:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 102,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "509:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "513:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "509:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 99,
																			"name": "DAI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "494:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 98,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "487:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "487:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "499:9:1",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "487:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "487:33:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 109,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "559:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "563:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "559:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 106,
																			"name": "WETH9",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 86,
																			"src": "542:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 105,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "535:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "535:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "549:9:1",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "535:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "535:35:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 116,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "608:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "612:6:1",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "608:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 113,
																			"name": "WBTC",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 89,
																			"src": "592:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 112,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "585:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "585:12:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "598:9:1",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "585:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "585:34:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 119,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "473:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 97,
												"id": 120,
												"nodeType": "Return",
												"src": "467:162:1"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "395:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "430:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "439:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "439:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "448:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:27:1"
									},
									"scope": 123,
									"src": "386:250:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 124,
							"src": "115:523:1",
							"usedErrors": []
						}
					],
					"src": "32:607:1"
				},
				"id": 1
			}
		}
	}
}