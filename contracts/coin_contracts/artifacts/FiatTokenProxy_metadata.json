{
	"compiler": {
		"version": "0.4.26+commit.4563c3fc"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "upgradeTo",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newImplementation",
						"type": "address"
					},
					{
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"payable": true,
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "changeAdmin",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_implementation",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "previousAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "AdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"admin()": {
					"return": "The address of the proxy admin."
				},
				"changeAdmin(address)": {
					"details": "Changes the admin of the proxy. Only the current admin can call this function.",
					"params": {
						"newAdmin": "Address to transfer proxy administration to."
					}
				},
				"implementation()": {
					"return": "The address of the implementation."
				},
				"upgradeTo(address)": {
					"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
					"params": {
						"newImplementation": "Address of the new implementation."
					}
				},
				"upgradeToAndCall(address,bytes)": {
					"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
					"params": {
						"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/develop/abi-spec.html#function-selector-and-argument-encoding.",
						"newImplementation": "Address of the new implementation."
					}
				}
			},
			"title": "FiatTokenProxy"
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"DPay-proof-of-concept/contracts/coin_contracts/USDC.sol": "FiatTokenProxy"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"DPay-proof-of-concept/contracts/coin_contracts/USDC.sol": {
			"keccak256": "0xa3fa8bd0f7823a76f462d83540adb4e22a055fb1e4b6cfd0cc4d6f4336606c10",
			"urls": [
				"bzzr://5a807bd58eb76fc9e0f79cee139246891f4ef2f078c050c453434c4b72d4abb8"
			]
		}
	},
	"version": 1
}